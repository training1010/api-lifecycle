<?xml version="1.0" encoding="UTF-8"?>
<exp:Export Version="3.0"
    xmlns:L7p="http://www.layer7tech.com/ws/policy"
    xmlns:exp="http://www.layer7tech.com/ws/policy/export" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <exp:References/>
    <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
        <wsp:All wsp:Usage="Required">
            <wsp:OneOrMore L7p:Enabled="false" wsp:Usage="Required">
                <wsp:All wsp:Usage="Required">
                    <L7p:HttpRoutingAssertion>
                        <L7p:Enabled booleanValue="false"/>
                        <L7p:ProtectedServiceUrl stringValue="http://lpar7.pfsfhq.com:3033/cics/CSNPolicy"/>
                        <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                            <L7p:Rules httpPassthroughRules="included">
                                <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                </L7p:item>
                                <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                </L7p:item>
                            </L7p:Rules>
                        </L7p:RequestHeaderRules>
                        <L7p:RequestParamRules httpPassthroughRuleSet="included">
                            <L7p:ForwardAll booleanValue="true"/>
                            <L7p:Rules httpPassthroughRules="included"/>
                        </L7p:RequestParamRules>
                        <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                            <L7p:Rules httpPassthroughRules="included">
                                <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                </L7p:item>
                            </L7p:Rules>
                        </L7p:ResponseHeaderRules>
                    </L7p:HttpRoutingAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHJlc3BvbnNlLm1haW5wYXJ0fQ=="/>
                        <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:Enabled booleanValue="false"/>
                        <L7p:VariableToSet stringValue="outPutXML"/>
                    </L7p:SetVariable>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:Enabled booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="outPutXML"/>
                        <L7p:Regex stringValue="() xmlns=&quot;.*&quot;"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue="$1"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:HardcodedResponse>
                        <L7p:Base64ResponseBody stringValue="JHtvdXRQdXRYTUwubWFpbnBhcnR9"/>
                    </L7p:HardcodedResponse>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:CustomizeErrorResponse>
                        <L7p:Content stringValueReference="inline"><![CDATA[{ 	"Exception":"Routing Failure",
	"Exception Details": "Failed to route the request"
}]]></L7p:Content>
                        <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ExtraHeaders nameValuePairArray="included"/>
                    </L7p:CustomizeErrorResponse>
                    <L7p:RaiseError/>
                </wsp:All>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="LEFT.COMMENT"/>
                            <L7p:value stringValue="//ROUTING"/>
                        </L7p:entry>
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="//Backend Routing to SOAP WebService..."/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:OneOrMore>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue=""/>
                <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                <L7p:DataType variableDataType="message"/>
                <L7p:VariableToSet stringValue="outPutXML"/>
            </L7p:SetVariable>
            <L7p:Regex>
                <L7p:AutoTarget booleanValue="false"/>
                <L7p:OtherTargetMessageVariable stringValue="outPutXML"/>
                <L7p:Regex stringValue="() xmlns=&quot;.*&quot;"/>
                <L7p:Replace booleanValue="true"/>
                <L7p:Replacement stringValue="$1"/>
                <L7p:Target target="OTHER"/>
            </L7p:Regex>
            <L7p:HardcodedResponse>
                <L7p:Base64ResponseBody stringValue="JHtvdXRQdXRYTUwubWFpbnBhcnR9"/>
            </L7p:HardcodedResponse>
        </wsp:All>
    </wsp:Policy>
</exp:Export>
